# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

provision_conf = YAML.load_file('provision.conf.yml')

Vagrant.configure("2") do |config|
  config.vm.box = "winky/amazonlinux-2"
  config.vm.box_version = "1.0"

  if Vagrant.has_plugin?("vagrant-proxyconf")
    proxy_url = "http://#{provision_conf["proxy_user"]}:#{provision_conf["proxy_pass"]}@proxy.toronto.ca:8080"
    config.proxy.http     = proxy_url
    config.proxy.https    = proxy_url
    config.proxy.no_proxy = "localhost,127.0.0.1"
    config.proxy.enabled = { npm: false }
  end

  config.vm.provider "virtualbox" do |v|
    # see https://stefanwrobel.com/how-to-make-vagrant-performance-not-suck
    v.customize ["modifyvm", :id, "--memory", 2048]
    # see https://www.mkwd.net/improve-vagrant-performance/
    v.cpus = 2
    v.customize ["modifyvm", :id, "--ioapic", "on"]
  end

  # webpack-dev-server
  config.vm.network "forwarded_port", guest: 8080, host: 8080
  # backend API server
  config.vm.network "forwarded_port", guest: 8081, host: 8081
  # node --inspect=0.0.0.0:9229
  config.vm.network "forwarded_port", guest: 9229, host: 9229

  # Disable automatic box checking.  While the comments in Vagrant's default
  # config discourage this, in a non-production setting it seems wiser to
  # prevent surprises for developers.
  config.vm.box_check_update = false

  shell_script = <<-EOF
/vagrant/provision-admin.sh
sudo -u vagrant /vagrant/provision-user-noconf.sh
#sudo -u vagrant /vagrant/provision-user.sh \
#  --ghUser "#{provision_conf["gh_user"]}" \
#  --ghPassword "#{provision_conf["gh_password"]}" \
#  --pgPassword "#{provision_conf["pg_password"]}"
EOF
  config.vm.provision "shell", privileged: true, inline: shell_script
end
